    1  help dir
    2  q
    3  cls
    4  clear
    5  ls
    6  cd Desktop
    7  ls
    8  cs ..
    9  cd Desktop
   10  cd ~
   11  pwd
   12  sd Desktop
   13  ls
   14  pwd
   15  cd ..
   16  mkdir Lesson
   17  ls
   18  cd Desktop
   19  clear
   20  cd Desktop
   21  cd Desktop
   22  ls
   23  mkdir Lesson
   24  mkdir Lesson2
   25  touch empty.txt
   26  touch empty.txt
   27  clear
   28  vim empty.txt
   29  wim empty.txt
   30  cd Desktop
   31  wim empty.txt
   32  vim empty.txt
   33  cd Desktop
   34  nano empty.txt
   35  cd Desktop
   36  nano empty.txt
   37  cat empty.txt
   38  cp empty.txt
   39  pwd
   40  cp /c/Users/User/Desktop/empty.txt
   41  cp /c/Users/User/Desktop/empty.txt cp /c/Users/User/Downlods
   42   cp /c/Users/User/Desktop/empty.txt cp /c/Users/User/Downlods
   43  cp /c/Users/User/Desktop/empty.txt cp /c/Users/User/Desktop/Lesson
   44  mv /c/Users/User/Desktop/empty.txt cp /c/Users/User/Desktop/Lesson2
   45  mv /c/Users/User/Desktop/empty.txt /c/Users/User/Desktop/Lesson
   46  git config --global user.name "Marina Doroshenko"
   47  git config --global user.email marina.doroshenko713@gmail.com
   48  git clone https://github.com/MarinaDoroshenko/test.git
   49  cd test
   50  git status
   51  touch new.txt
   52  git status
   53  touch New.txt
   54  git status
   55  git add New.txt
   56  git status
   57  git commit -m "New file created"
   58  git status
   59  git log
   60  git brunch
   61  git branch
   62  git checkout -b new_branch
   63  git branch
   64  git checkout main
   65  git branch
   66  git checkout new_branch
   67  nano New.txt
   68  ls
   69  cd Desktop
   70  cd Test
   71  cd test
   72  nano New.txt
   73  git commit -m "New modified"
   74  git brunch
   75  git branch
   76  git checkout main
   77  git merge new_branch
   78  git branch
   79  git status
   80   gitgit
   81  git commit -m "New modified"
   82  git checkout new_branch
   83  git merge main
   84  git status
   85  git push
   86  git push --set-upstream origin new_branch
   87  git push
   88  cd Desktop
   89  cd Homework10
   90  -c && rm ~/.bash_history
   91  c && rm ~/.bash_history
   92  git clone https://github.com/MarinaDoroshenko/HW_10.git
   93  cd HW_10
   94  touch text_ignore.txt
   95  touch text_ignore.txt
   96  nano .gitignore
   97  git status
   98  git add text_ignore.txt
   99  -f
  100  Клонуйте репозиторій (створений у п.7) на свою робочу машину;
  101  2. Перейдіть у склонований репозиторій на робочій машині за допомогою команди cd;
  102  3. Створіть через термінал файл text_ignore.txt (touch);
  103  4. Відредагуйте файл .gitignore, додавши туди назву файлу text_ignore.txt (потрібно просто записати рядок “text_ignore.txt” у файл .gitignore);
  104  5. Переконайтеся, що text_ignore.txt файл не є видимим для GIT через виконання команди git status;
  105  6. Проіндексуйте всі зміни за допомогою команди “git add .” ;
  106  cd Desktop
  107  cd Homework10
  108  cd HW_10
  109  nano .gitignore
  110  git status
  111  git add
  112  git add .
  113  git commit -m
  114  git commit -m "Task1"
  115  touch main_test.txt
  116  git add .
  117  git commit -m "Task2"
  118  git checkout -b develop
  119  touch develop_test.txt
  120  git add .
  121  git commit -m "Task3"
  122  nano develop_test.txt
  123  nano develop_test.txt
  124  git status
  125  git add .
  126  git commit -m "Task3"
  127  git checkout main
  128  git merge develop
  129  git log
  130  history > command_list.csv
